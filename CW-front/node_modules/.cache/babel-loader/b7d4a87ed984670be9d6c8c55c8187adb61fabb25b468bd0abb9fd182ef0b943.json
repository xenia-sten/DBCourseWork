{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list row\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"Список клиентов:\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"list-group\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_client_form = _resolveComponent(\"client-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_visit_list = _resolveComponent(\"visit-list\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _createVNode(_component_my_button, {\n    id: \"btn-add-client\",\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Создать \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible\n  }, {\n    default: _withCtx(() => [_createVNode(_component_client_form, {\n      onCreate: $options.createClient\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), this.clients.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.clients, client => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"clientItem list-group-item\",\n      key: client.id\n    }, [_createTextVNode(_toDisplayString(client.name) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"badge badge-success\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.showHistory && $options.showHistory(...args))\n    }, \" History \"), _createVNode(_component_my_dialog, {\n      show: $data.historyVisible\n    }, {\n      default: _withCtx(() => [_createVNode(_component_visit_list, {\n        visits: _ctx.visitList\n      }, null, 8 /* PROPS */, [\"visits\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_router_link, {\n      to: '/clients/' + client.id,\n      class: \"badge badge-warning\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Edit\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"h5\", _hoisted_4, \"Список клиентов пуст\"))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","style","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_my_button","id","onClick","$options","showDialog","default","_withCtx","_createTextVNode","_","_component_my_dialog","show","$data","dialogVisible","_component_client_form","onCreate","createClient","clients","length","_hoisted_3","_Fragment","_renderList","$props","client","_toDisplayString","name","_cache","args","showHistory","historyVisible","_component_visit_list","visits","_ctx","visitList","_component_router_link","to","_hoisted_4"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\ClientList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list row\">\r\n    <div>\r\n      <h5>Список клиентов:</h5>\r\n      <my-button id=\"btn-add-client\" @click=\"showDialog\"> Создать </my-button>\r\n      <my-dialog :show=\"dialogVisible\">\r\n        <client-form @create=\"createClient\" />\r\n      </my-dialog>\r\n      <ul class=\"list-group\" v-if=\"this.clients.length > 0\">\r\n        <li\r\n          class=\"clientItem list-group-item\"\r\n          v-for=\"client in clients\"\r\n          :key=\"client.id\"\r\n        >\r\n          {{ client.name }}\r\n          <button class=\"badge badge-success\" @click=\"showHistory\">\r\n            History\r\n          </button>\r\n          <my-dialog :show=\"historyVisible\">\r\n            <visit-list :visits=\"visitList\"/>\r\n          </my-dialog>\r\n          <router-link :to=\"'/clients/' + client.id\" class=\"badge badge-warning\"\r\n            >Edit</router-link\r\n          >\r\n        </li>\r\n      </ul>\r\n      <h5 v-else style=\"color: red\">Список клиентов пуст</h5>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport clientService from \"@/services/client.service\";\r\nimport ClientForm from \"./ClientForm.vue\";\r\nimport MyButton from \"./UI/MyButton.vue\";\r\nimport MyDialog from \"./UI/MyDialog.vue\";\r\nimport VisitList from './VisitList.vue';\r\n\r\nexport default {\r\n  components: { MyButton, MyDialog, ClientForm, VisitList },\r\n  props: {\r\n    clients: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      historyVisible: false,\r\n    };\r\n  },\r\n  methods: {\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n    showHistory(){\r\n      this.historyVisible = true;\r\n    },\r\n    createClient(client) {\r\n      var data = {\r\n        company_id: client.company_id,\r\n        name: client.name,\r\n        email: client.email,\r\n        phone_number: client.phone_number,\r\n        description: client.descripiton,\r\n      };\r\n      clientService\r\n        .createClient(data)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        .catch((e) => console.log(e));\r\n      this.dialogVisible = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.clientItem {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n  position: static;\r\n}\r\n#btn-add-client {\r\n  width: 200px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAU;gCAEjBC,mBAAA,CAAyB,YAArB,kBAAgB;;EAH1BC,GAAA;EAQUF,KAAK,EAAC;;;EARhBE,GAAA;EA0BiBC,KAAkB,EAAlB;IAAA;EAAA;;;;;;;;uBAzBfC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJJ,mBAAA,CAyBM,cAxBJK,UAAyB,EACzBC,YAAA,CAAwEC,oBAAA;IAA7DC,EAAE,EAAC,gBAAgB;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAJ7CC,OAAA,EAAAC,QAAA,CAIyD,MAAS,CAJlEC,gBAAA,CAIyD,WAAS,E;IAJlEC,CAAA;kCAKMT,YAAA,CAEYU,oBAAA;IAFAC,IAAI,EAAEC,KAAA,CAAAC;EAAa;IALrCP,OAAA,EAAAC,QAAA,CAMQ,MAAsC,CAAtCP,YAAA,CAAsCc,sBAAA;MAAxBC,QAAM,EAAEX,QAAA,CAAAY;IAAY,sC;IAN1CP,CAAA;oCAQwCQ,OAAO,CAACC,MAAM,Q,cAAhDrB,mBAAA,CAiBK,MAjBLsB,UAiBK,I,kBAhBHtB,mBAAA,CAeKuB,SAAA,QAxBbC,WAAA,CAW2BC,MAAA,CAAAL,OAAO,EAAjBM,MAAM;yBAFf1B,mBAAA,CAeK;MAdHJ,KAAK,EAAC,4BAA4B;MAEjCE,GAAG,EAAE4B,MAAM,CAACrB;QAZvBM,gBAAA,CAAAgB,gBAAA,CAcaD,MAAM,CAACE,IAAI,IAAG,GACjB,iBAAA/B,mBAAA,CAES;MAFDD,KAAK,EAAC,qBAAqB;MAAEU,OAAK,EAAAuB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEvB,QAAA,CAAAwB,WAAA,IAAAxB,QAAA,CAAAwB,WAAA,IAAAD,IAAA,CAAW;OAAE,WAEzD,GACA3B,YAAA,CAEYU,oBAAA;MAFAC,IAAI,EAAEC,KAAA,CAAAiB;IAAc;MAlB1CvB,OAAA,EAAAC,QAAA,CAmBY,MAAiC,CAAjCP,YAAA,CAAiC8B,qBAAA;QAApBC,MAAM,EAAEC,IAAA,CAAAC;MAAS,oC;MAnB1CxB,CAAA;iCAqBUT,YAAA,CACqBkC,sBAAA;MADPC,EAAE,gBAAgBZ,MAAM,CAACrB,EAAE;MAAET,KAAK,EAAC;;MArB3Da,OAAA,EAAAC,QAAA,CAsBa,MAAI,CAtBjBC,gBAAA,CAsBa,MAAI,E;MAtBjBC,CAAA;;qDA0BMZ,mBAAA,CAAuD,MAAvDuC,UAAuD,EAAzB,sBAAoB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}