{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Создание клиента\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Выберите компанию\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_my_button = _resolveComponent(\"my-button\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.client.company_id = $event)\n  }, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.companyByUser, company => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: company.id,\n      value: company.id\n    }, _toDisplayString(company.name), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.client.company_id]]), _createVNode(_component_my_input, {\n    modelValue: $data.client.name,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.client.name = $event),\n    type: \"text\",\n    placeholder: \"Имя\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_input, {\n    modelValue: $data.client.email,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.client.email = $event),\n    type: \"text\",\n    placeholder: \"Email\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_input, {\n    modelValue: $data.client.phone_number,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.client.phone_number = $event),\n    type: \"text\",\n    placeholder: \"Номер телефона\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_input, {\n    modelValue: $data.client.description,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.client.description = $event),\n    type: \"text\",\n    placeholder: \"Описание\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_button, {\n    style: {\n      \"align-self\": \"flex-end\",\n      \"margin-top\": \"15px\"\n    },\n    onClick: $options.createClient\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Создать \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","onSubmit","_cache","_withModifiers","_hoisted_1","$event","$data","client","company_id","_hoisted_2","_Fragment","_renderList","companyByUser","company","key","id","name","_hoisted_3","_createVNode","_component_my_input","modelValue","type","placeholder","email","phone_number","description","_component_my_button","style","onClick","$options","createClient","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\ClientForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent>\r\n    <h4>Создание клиента</h4>\r\n    <select v-model=\"client.company_id\">\r\n      <option disabled value=\"\">Выберите компанию</option>\r\n      <option\r\n        v-for=\"company in companyByUser\"\r\n        :key=\"company.id\"\r\n        :value=\"company.id\"\r\n      >\r\n        {{ company.name }}\r\n      </option>\r\n    </select>\r\n    <my-input v-model=\"client.name\" type=\"text\" placeholder=\"Имя\" />\r\n    <my-input v-model=\"client.email\" type=\"text\" placeholder=\"Email\" />\r\n    <my-input v-model=\"client.phone_number\" type=\"text\" placeholder=\"Номер телефона\" />\r\n    <my-input v-model=\"client.description\" type=\"text\" placeholder=\"Описание\" />\r\n    <my-button\r\n      style=\"align-self: flex-end; margin-top: 15px\"\r\n      @click=\"createClient\"\r\n    >\r\n      Создать\r\n    </my-button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport UserService from \"@/services/user.service\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      client: {\r\n        company_id: \"\",\r\n        email: \"\",\r\n        phone_number: \"\",\r\n        name: \"\",\r\n        description: '',\r\n      },\r\n      companyByUser: [],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    createClient() {\r\n      this.$emit(\"create\", this.client);\r\n      this.client = {\r\n        company_id: \"\",\r\n        email: \"\",\r\n        phone_number: \"\",\r\n        name: \"\",\r\n        description: '',\r\n      };\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    UserService.getCompaniesByUser(this.currentUser.id).then(\r\n      (response) => {\r\n        this.companyByUser = response.data;\r\n        console.log(this.companyByUser);\r\n      },\r\n      (error) => {\r\n        this.companyByUser =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";gCAEIA,mBAAA,CAAyB,YAArB,kBAAgB;gCAElBA,mBAAA,CAAoD;EAA5CC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,mBAAiB;mBAJjD;;;;uBACEC,mBAAA,CAsBO;IAtBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADfC,cAAA,CACQ,QAAe;MACnBC,UAAyB,E,gBACzBP,mBAAA,CASS;IAZb,uBAAAK,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAGqBC,KAAA,CAAAC,MAAM,CAACC,UAAU,GAAAH,MAAA;MAChCI,UAAoD,G,kBACpDT,mBAAA,CAMSU,SAAA,QAXfC,WAAA,CAM0BL,KAAA,CAAAM,aAAa,EAAxBC,OAAO;yBADhBb,mBAAA,CAMS;MAJNc,GAAG,EAAED,OAAO,CAACE,EAAE;MACfhB,KAAK,EAAEc,OAAO,CAACE;wBAEbF,OAAO,CAACG,IAAI,wBAVvBC,UAAA;2EAGqBX,KAAA,CAAAC,MAAM,CAACC,UAAU,E,GAUlCU,YAAA,CAAgEC,mBAAA;IAbpEC,UAAA,EAauBd,KAAA,CAAAC,MAAM,CAACS,IAAI;IAblC,uBAAAd,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAauBC,KAAA,CAAAC,MAAM,CAACS,IAAI,GAAAX,MAAA;IAAEgB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;2CACxDJ,YAAA,CAAmEC,mBAAA;IAdvEC,UAAA,EAcuBd,KAAA,CAAAC,MAAM,CAACgB,KAAK;IAdnC,uBAAArB,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAcuBC,KAAA,CAAAC,MAAM,CAACgB,KAAK,GAAAlB,MAAA;IAAEgB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;2CACzDJ,YAAA,CAAmFC,mBAAA;IAfvFC,UAAA,EAeuBd,KAAA,CAAAC,MAAM,CAACiB,YAAY;IAf1C,uBAAAtB,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAeuBC,KAAA,CAAAC,MAAM,CAACiB,YAAY,GAAAnB,MAAA;IAAEgB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;2CAChEJ,YAAA,CAA4EC,mBAAA;IAhBhFC,UAAA,EAgBuBd,KAAA,CAAAC,MAAM,CAACkB,WAAW;IAhBzC,uBAAAvB,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAgBuBC,KAAA,CAAAC,MAAM,CAACkB,WAAW,GAAApB,MAAA;IAAEgB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;2CAC/DJ,YAAA,CAKYQ,oBAAA;IAJVC,KAA8C,EAA9C;MAAA;MAAA;IAAA,CAA8C;IAC7CC,OAAK,EAAEC,QAAA,CAAAC;;IAnBdC,OAAA,EAAAC,QAAA,CAoBK,MAED,CAtBJC,gBAAA,CAoBK,WAED,E;IAtBJC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}