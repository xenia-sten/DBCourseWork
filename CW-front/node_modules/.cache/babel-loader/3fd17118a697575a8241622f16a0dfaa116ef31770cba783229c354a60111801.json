{"ast":null,"code":"/*\r\n  Он проверяет наличие userэлемента в локальном хранилище.\r\n  Если есть вход в систему userс помощью accessToken(JWT),\r\n  верните заголовок авторизации HTTP. В противном случае верните пустой объект.\r\n*/\n\nexport default function authHeader() {\n  let user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.accessToken) {\n    // for Node.js Express back-end\n    return {\n      'x-access-token': user.accessToken\n    };\n  } else {\n    return {};\n  }\n}","map":{"version":3,"names":["authHeader","user","JSON","parse","localStorage","getItem","accessToken"],"sources":["C:/Users/Admin/Desktop/X/SSTU/6 семак/БД/CW_FRONT/cw-front/src/services/auth-header.js"],"sourcesContent":["/*\r\n  Он проверяет наличие userэлемента в локальном хранилище.\r\n  Если есть вход в систему userс помощью accessToken(JWT),\r\n  верните заголовок авторизации HTTP. В противном случае верните пустой объект.\r\n*/\r\n\r\nexport default function authHeader() {\r\n  let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // for Node.js Express back-end\r\n    return { 'x-access-token': user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASA,UAAUA,CAAA,EAAG;EACnC,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAEnD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAW,EAAE;IAC5B;IACA,OAAO;MAAE,gBAAgB,EAAEL,IAAI,CAACK;IAAY,CAAC;EAC/C,CAAC,MAAM;IACL,OAAO,CAAC,CAAC;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}