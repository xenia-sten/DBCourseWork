{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4a3fa6b9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"list row\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", null, \"Список участников:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  class: \"list-group\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _createVNode(_component_my_button, {\n    id: \"btn-add-user\",\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Добавить участника \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" TODO \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), this.users.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.users, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"userItem list-group-item\",\n      key: user.id\n    }, [_createTextVNode(_toDisplayString(user.name) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"badge badge-danger mr-2\",\n      onClick: $event => _ctx.$emit('remove', user)\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"h5\", _hoisted_5, \"Только Вы в этой компании\"))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","style","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_my_button","id","onClick","$options","showDialog","default","_withCtx","_createTextVNode","_","_component_my_dialog","show","$data","dialogVisible","_createCommentVNode","users","length","_hoisted_3","_Fragment","_renderList","$props","user","_toDisplayString","name","$event","_ctx","$emit","_hoisted_4","_hoisted_5"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list row\">\r\n    <div>\r\n      <h5>Список участников:</h5>\r\n      <my-button id=\"btn-add-user\" @click=\"showDialog\"> Добавить участника </my-button>\r\n      <my-dialog :show=\"dialogVisible\">\r\n        <!-- TODO -->\r\n      </my-dialog>\r\n      <ul class=\"list-group\"  v-if=\"this.users.length > 0\">\r\n        <li class=\"userItem list-group-item\" v-for=\"user in users\" :key=\"user.id\">\r\n          {{ user.name }}\r\n          <button class=\"badge badge-danger mr-2\" @click=\"$emit('remove', user)\">Удалить</button>\r\n        </li>\r\n      </ul>\r\n      <h5 v-else style=\"color: red\">Только Вы в этой компании</h5>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MyButton from \"./UI/MyButton.vue\";\r\nimport MyDialog from \"./UI/MyDialog.vue\";\r\n\r\nexport default {\r\n  components: { MyButton, MyDialog },\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n    };\r\n  },\r\n  methods: {\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.userItem{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n}\r\n#btn-add-user{\r\n  width: 200px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;gEAEjBC,mBAAA,CAA2B,YAAvB,oBAAkB;;EAH5BC,GAAA;EAQUF,KAAK,EAAC;;mBARhB;;EAAAE,GAAA;EAciBC,KAAkB,EAAlB;IAAA;EAAA;;;;;uBAbfC,mBAAA,CAeM,OAfNC,UAeM,GAdJJ,mBAAA,CAaM,cAZJK,UAA2B,EAC3BC,YAAA,CAAiFC,oBAAA;IAAtEC,EAAE,EAAC,cAAc;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAJ3CC,OAAA,EAAAC,QAAA,CAIuD,MAAoB,CAJ3EC,gBAAA,CAIuD,sBAAoB,E;IAJ3EC,CAAA;kCAKMT,YAAA,CAEYU,oBAAA;IAFAC,IAAI,EAAEC,KAAA,CAAAC;EAAa;IALrCP,OAAA,EAAAC,QAAA,CAMQ,MAAa,CAAbO,mBAAA,UAAa,C;IANrBL,CAAA;oCAQyCM,KAAK,CAACC,MAAM,Q,cAA/CnB,mBAAA,CAKK,MALLoB,UAKK,I,kBAJHpB,mBAAA,CAGKqB,SAAA,QAZbC,WAAA,CAS4DC,MAAA,CAAAL,KAAK,EAAbM,IAAI;yBAAhDxB,mBAAA,CAGK;MAHDJ,KAAK,EAAC,0BAA0B;MAAwBE,GAAG,EAAE0B,IAAI,CAACnB;QAT9EM,gBAAA,CAAAc,gBAAA,CAUaD,IAAI,CAACE,IAAI,IAAG,GACf,iBAAA7B,mBAAA,CAAuF;MAA/ED,KAAK,EAAC,yBAAyB;MAAEU,OAAK,EAAAqB,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWL,IAAI;OAAG,SAAO,iBAXxFM,UAAA,E;qDAcM9B,mBAAA,CAA4D,MAA5D+B,UAA4D,EAA9B,2BAAyB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}