{"ast":null,"code":"import userService from \"@/services/user.service\";\nimport MyButton from \"./UI/MyButton.vue\";\n// import MyDialog from \"./UI/MyDialog.vue\";\n// import UserForm from './UserForm.vue';\nimport MyInput from \"./UI/MyInput.vue\";\nexport default {\n  // components: { MyButton, MyDialog, UserForm },\n  components: {\n    MyInput,\n    MyButton\n  },\n  props: {\n    users: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      // dialogVisible: false,\n      isVisibleAddUser: false,\n      usersWO: [],\n      emailQuery: \"\"\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    sortByEmailUsers() {\n      return this.usersWO.filter(user => user.email.includes(this.emailQuery));\n    }\n  },\n  methods: {\n    // showDialog() {\n    //   this.dialogVisible = true;\n    // },\n\n    showAddUser() {\n      if (this.isVisibleAddUser) {\n        this.isVisibleAddUser = false;\n        return;\n      }\n      this.isVisibleAddUser = true;\n    }\n  },\n  mounted() {\n    userService.getAllUsers().then(response => {\n      this.usersWO = response.data;\n    }).catch(e => console.log(e));\n  }\n};","map":{"version":3,"names":["userService","MyButton","MyInput","components","props","users","type","Array","required","data","isVisibleAddUser","usersWO","emailQuery","computed","currentUser","$store","state","auth","user","sortByEmailUsers","filter","email","includes","methods","showAddUser","mounted","getAllUsers","then","response","catch","e","console","log"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list row\">\r\n    <div>\r\n      <h5>Список участников:</h5>\r\n      <my-button id=\"btn-add-user\" @click=\"showAddUser\">\r\n        Добавить участника\r\n      </my-button>\r\n      <form @submit.prevent v-if=\"isVisibleAddUser\" style=\"margin-top: 20px;\">\r\n        <h4>Добавление пользователя в компанию</h4>\r\n        <my-input placeholder=\"Search by email\" v-model=\"emailQuery\" />\r\n        <ul class=\"list-group\" style=\"margin-top: 20px\">\r\n          <li\r\n            class=\"userItem list-group-item\"\r\n            v-for=\"user in sortByEmailUsers\"\r\n            :key=\"user.id\"\r\n          >\r\n            {{ user.name }} - {{ user.email }}\r\n            <button\r\n              @click=\"$emit('create', user)\"\r\n              class=\"badge badge-success\"\r\n              v-if=\"user.id !== this.currentUser.id\"\r\n              style=\"float: right\"\r\n            >\r\n              Добавить\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n      <ul class=\"list-group\" v-if=\"!isVisibleAddUser\">\r\n        <li\r\n          class=\"userItem list-group-item\"\r\n          v-for=\"user in users\"\r\n          :key=\"user.id\"\r\n        >\r\n          {{ user.name }}\r\n          <button\r\n            class=\"badge badge-danger mr-2\"\r\n            @click=\"$emit('remove', user)\"\r\n            v-if=\"user.id !== this.currentUser.id\"\r\n          >\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userService from \"@/services/user.service\";\r\nimport MyButton from \"./UI/MyButton.vue\";\r\n// import MyDialog from \"./UI/MyDialog.vue\";\r\n// import UserForm from './UserForm.vue';\r\nimport MyInput from \"./UI/MyInput.vue\";\r\n\r\nexport default {\r\n  // components: { MyButton, MyDialog, UserForm },\r\n  components: { MyInput, MyButton },\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // dialogVisible: false,\r\n      isVisibleAddUser: false,\r\n      usersWO: [],\r\n      emailQuery: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    sortByEmailUsers() {\r\n      return this.usersWO.filter((user) =>\r\n        user.email.includes(this.emailQuery)\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    // showDialog() {\r\n    //   this.dialogVisible = true;\r\n    // },\r\n\r\n    showAddUser() {\r\n      if (this.isVisibleAddUser) {\r\n        this.isVisibleAddUser = false;\r\n        return;\r\n      }\r\n      this.isVisibleAddUser = true;\r\n    },\r\n  },\r\n  mounted() {\r\n    userService\r\n      .getAllUsers()\r\n      .then((response) => {\r\n        this.usersWO = response.data;\r\n      })\r\n      .catch((e) => console.log(e));\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.userItem {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n  position: static;\r\n}\r\n#btn-add-user {\r\n  width: 200px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":"AAiDA,OAAOA,WAAU,MAAO,yBAAyB;AACjD,OAAOC,QAAO,MAAO,mBAAmB;AACxC;AACA;AACA,OAAOC,OAAM,MAAO,kBAAkB;AAEtC,eAAe;EACb;EACAC,UAAU,EAAE;IAAED,OAAO;IAAED;EAAS,CAAC;EACjCG,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,gBAAgB,EAAE,KAAK;MACvBC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI;IACpC,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACR,OAAO,CAACS,MAAM,CAAEF,IAAI,IAC9BA,IAAI,CAACG,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACV,UAAU,CACrC,CAAC;IACH;EACF,CAAC;EACDW,OAAO,EAAE;IACP;IACA;IACA;;IAEAC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACd,gBAAgB,EAAE;QACzB,IAAI,CAACA,gBAAe,GAAI,KAAK;QAC7B;MACF;MACA,IAAI,CAACA,gBAAe,GAAI,IAAI;IAC9B;EACF,CAAC;EACDe,OAAOA,CAAA,EAAG;IACRzB,WAAU,CACP0B,WAAW,CAAC,EACZC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACjB,OAAM,GAAIiB,QAAQ,CAACnB,IAAI;IAC9B,CAAC,EACAoB,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}