{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list row\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"Список клиентов:\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"list-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_client_form = _resolveComponent(\"client-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _createVNode(_component_my_button, {\n    id: \"btn-add-client\",\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Создать \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible\n  }, {\n    default: _withCtx(() => [_createVNode(_component_client_form, {\n      onCreate: $options.createClient\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.clients, client => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"clientItem list-group-item\",\n      key: client.id\n    }, [_createTextVNode(_toDisplayString(client.name) + \" \", 1 /* TEXT */), _createVNode(_component_router_link, {\n      to: '/clients/' + client.id,\n      class: \"badge badge-warning\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Edit\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_my_button","id","onClick","$options","showDialog","default","_withCtx","_createTextVNode","_","_component_my_dialog","show","$data","dialogVisible","_component_client_form","onCreate","createClient","_hoisted_3","_Fragment","_renderList","$props","clients","client","key","_toDisplayString","name","_component_router_link","to"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\ClientList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list row\">\r\n    <div>\r\n      <h5>Список клиентов:</h5>\r\n      <my-button id=\"btn-add-client\" @click=\"showDialog\"> Создать </my-button>\r\n      <my-dialog :show=\"dialogVisible\">\r\n        <client-form @create=\"createClient\"/>\r\n      </my-dialog>\r\n      <ul class=\"list-group\">\r\n        <li class=\"clientItem list-group-item\" v-for=\"client in clients\" :key=\"client.id\">\r\n          {{ client.name }}\r\n        <router-link :to=\"'/clients/' + client.id\" class=\"badge badge-warning\">Edit</router-link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport clientService from '@/services/client.service';\r\nimport ClientForm from './ClientForm.vue';\r\nimport MyButton from \"./UI/MyButton.vue\";\r\nimport MyDialog from \"./UI/MyDialog.vue\";\r\n\r\nexport default {\r\n  components: { MyButton, MyDialog, ClientForm },\r\n  props: {\r\n    clients: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n    };\r\n  },\r\n  methods: {\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n    createClient(client){\r\n      var data = {\r\n\r\n      };\r\n      clientService.createClient()\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.clientItem{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n}\r\n#btn-add-client{\r\n  width: 200px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAU;gCAEjBC,mBAAA,CAAyB,YAArB,kBAAgB;;EAKhBD,KAAK,EAAC;AAAY;;;;;;uBAP1BE,mBAAA,CAcM,OAdNC,UAcM,GAbJF,mBAAA,CAYM,cAXJG,UAAyB,EACzBC,YAAA,CAAwEC,oBAAA;IAA7DC,EAAE,EAAC,gBAAgB;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAJ7CC,OAAA,EAAAC,QAAA,CAIyD,MAAS,CAJlEC,gBAAA,CAIyD,WAAS,E;IAJlEC,CAAA;kCAKMT,YAAA,CAEYU,oBAAA;IAFAC,IAAI,EAAEC,KAAA,CAAAC;EAAa;IALrCP,OAAA,EAAAC,QAAA,CAMQ,MAAqC,CAArCP,YAAA,CAAqCc,sBAAA;MAAvBC,QAAM,EAAEX,QAAA,CAAAY;IAAY,sC;IAN1CP,CAAA;+BAQMb,mBAAA,CAKK,MALLqB,UAKK,I,kBAJHpB,mBAAA,CAGKqB,SAAA,QAZbC,WAAA,CASgEC,MAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAApDzB,mBAAA,CAGK;MAHDF,KAAK,EAAC,4BAA4B;MAA4B4B,GAAG,EAAED,MAAM,CAACpB;QATtFM,gBAAA,CAAAgB,gBAAA,CAUaF,MAAM,CAACG,IAAI,IAAG,GACnB,iBAAAzB,YAAA,CAAyF0B,sBAAA;MAA3EC,EAAE,gBAAgBL,MAAM,CAACpB,EAAE;MAAEP,KAAK,EAAC;;MAXzDW,OAAA,EAAAC,QAAA,CAW+E,MAAI,CAXnFC,gBAAA,CAW+E,MAAI,E;MAXnFC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}