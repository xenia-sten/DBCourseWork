{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport userService from \"@/services/user.service\";\nimport UserForm from \"../UserForm.vue\";\nimport MyDialog from '../UI/MyDialog.vue';\nexport default {\n  components: {\n    UserForm,\n    MyDialog\n  },\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Profile\",\n  data() {\n    return {\n      userName: '',\n      dialogVisible: false\n    };\n  },\n  methods: {\n    updateUser(user) {\n      const data = {\n        name: user.name,\n        email: user.email,\n        phone_number: user.phone_number\n      };\n      userService.updateUser(this.currentUser.id, data).then(response => {\n        console.log(response);\n      }).catch(e => console.log(e));\n      this.dialogVisible = false;\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    }\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    }\n  },\n  mounted() {\n    if (!this.currentUser) {\n      this.$router.push(\"/login\");\n    }\n    userService.getUserById(this.currentUser.id).then(response => {\n      this.userName = response.data.name;\n    }).catch(e => console.log(e));\n  }\n};","map":{"version":3,"names":["userService","UserForm","MyDialog","components","name","data","userName","dialogVisible","methods","updateUser","user","email","phone_number","currentUser","id","then","response","console","log","catch","e","showDialog","computed","$store","state","auth","mounted","$router","push","getUserById"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\pages\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <header class=\"jumbotron\">\r\n      <h3>\r\n        <strong>{{ userName }}</strong> Profile\r\n      </h3>\r\n    </header>\r\n    <!-- <p>\r\n      <strong>Token:</strong>\r\n      {{currentUser.accessToken.substring(0, 20)}} ... {{currentUser.accessToken.substr(currentUser.accessToken.length - 20)}}\r\n    </p> -->\r\n    <p>\r\n      <strong>Email:</strong>\r\n      {{ currentUser.email }}\r\n    </p>\r\n    <p>\r\n      <strong>Phone number:</strong>\r\n      {{ currentUser.phone_number }}\r\n    </p>\r\n    <strong>Roles:</strong>\r\n    <ul>\r\n      <li v-for=\"role in currentUser.roles\" :key=\"role\">{{ role }}</li>\r\n    </ul>\r\n    <button class=\"badge badge-warning\" @click=\"showDialog\">Edit</button>\r\n    <my-dialog :show=\"dialogVisible\">\r\n      <user-form @update=\"updateUser\" />\r\n    </my-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userService from \"@/services/user.service\";\r\nimport UserForm from \"../UserForm.vue\";\r\nimport MyDialog from '../UI/MyDialog.vue';\r\n\r\nexport default {\r\n  components: { UserForm, MyDialog },\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: \"Profile\",\r\n\r\n  data() {\r\n    return {\r\n      userName: '',\r\n      dialogVisible: false,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    updateUser(user) {\r\n      const data = {\r\n        name: user.name,\r\n        email: user.email,\r\n        phone_number: user.phone_number,\r\n        \r\n      };\r\n      userService.updateUser(this.currentUser.id, data).then(\r\n        (response) => {\r\n          console.log(response);\r\n        }\r\n      ).catch(e => console.log(e));\r\n      this.dialogVisible = false;\r\n    },\r\n\r\n    showDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n  },\r\n  mounted() {\r\n    if (!this.currentUser) {\r\n      this.$router.push(\"/login\");\r\n    }\r\n\r\n    userService\r\n      .getUserById(this.currentUser.id)\r\n      .then((response) => {\r\n        this.userName = response.data.name;\r\n      })\r\n      .catch((e) => console.log(e));\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA+BA,OAAOA,WAAU,MAAO,yBAAyB;AACjD,OAAOC,QAAO,MAAO,iBAAiB;AACtC,OAAOC,QAAO,MAAO,oBAAoB;AAEzC,eAAe;EACbC,UAAU,EAAE;IAAEF,QAAQ;IAAEC;EAAS,CAAC;EAClC;EACAE,IAAI,EAAE,SAAS;EAEfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,MAAML,IAAG,GAAI;QACXD,IAAI,EAAEM,IAAI,CAACN,IAAI;QACfO,KAAK,EAAED,IAAI,CAACC,KAAK;QACjBC,YAAY,EAAEF,IAAI,CAACE;MAErB,CAAC;MACDZ,WAAW,CAACS,UAAU,CAAC,IAAI,CAACI,WAAW,CAACC,EAAE,EAAET,IAAI,CAAC,CAACU,IAAI,CACnDC,QAAQ,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACvB,CACF,CAAC,CAACG,KAAK,CAACC,CAAA,IAAKH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC,CAAC;MAC5B,IAAI,CAACb,aAAY,GAAI,KAAK;IAC5B,CAAC;IAEDc,UAAUA,CAAA,EAAG;MACX,IAAI,CAACd,aAAY,GAAI,IAAI;IAC3B;EACF,CAAC;EAEDe,QAAQ,EAAE;IACRT,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACU,MAAM,CAACC,KAAK,CAACC,IAAI,CAACf,IAAI;IACpC;EACF,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACb,WAAW,EAAE;MACrB,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;IAEA5B,WAAU,CACP6B,WAAW,CAAC,IAAI,CAAChB,WAAW,CAACC,EAAE,EAC/BC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACV,QAAO,GAAIU,QAAQ,CAACX,IAAI,CAACD,IAAI;IACpC,CAAC,EACAe,KAAK,CAAEC,CAAC,IAAKH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}