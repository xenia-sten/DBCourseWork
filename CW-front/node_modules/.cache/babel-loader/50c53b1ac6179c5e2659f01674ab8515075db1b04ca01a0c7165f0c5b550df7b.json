{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5071392f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Создание визита\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Выберите компанию\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Выберите клиента\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"value\"];\nexport function render(_ctx, _cache) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_my_button = _resolveComponent(\"my-button\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.visit.company_id = $event)\n  }, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.companyByUser, company => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: company.id,\n      value: company.id\n    }, _toDisplayString(company.name), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.visit.company_id]]), _createVNode(_component_my_input, {\n    modelValue: _ctx.visit.client_id,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.visit.client_id = $event),\n    type: \"text\",\n    placeholder: \"Клиент\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.visit.client_id = $event),\n    onClick: _cache[3] || (_cache[3] = () => {})\n  }, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.clientsByCompany, client => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: client.id,\n      value: client.id\n    }, _toDisplayString(client.name), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.visit.client_id]]), _createVNode(_component_my_input, {\n    modelValue: _ctx.visit.template_id,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.visit.template_id = $event),\n    type: \"text\",\n    placeholder: \"Услуга\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_input, {\n    modelValue: _ctx.visit.visit_date,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.visit.visit_date = $event),\n    type: \"text\",\n    placeholder: \"Дата посещения\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_input, {\n    modelValue: _ctx.visit.description,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.visit.description = $event),\n    type: \"text\",\n    placeholder: \"Описание\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_button, {\n    style: {\n      \"align-self\": \"flex-end\",\n      \"margin-top\": \"15px\"\n    },\n    onClick: _ctx.createVisit\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Создать \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","onSubmit","_cache","_withModifiers","_hoisted_1","$event","_ctx","visit","company_id","_hoisted_2","_Fragment","_renderList","companyByUser","company","key","id","name","_hoisted_3","_createVNode","_component_my_input","modelValue","client_id","type","placeholder","onClick","_hoisted_4","clientsByCompany","client","_hoisted_5","template_id","visit_date","description","_component_my_button","style","createVisit","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\VisitForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent>\r\n    <h4>Создание визита</h4>\r\n    <select v-model=\"visit.company_id\">\r\n      <option disabled value=\"\">Выберите компанию</option>\r\n      <option\r\n        v-for=\"company in companyByUser\"\r\n        :key=\"company.id\"\r\n        :value=\"company.id\"\r\n      >\r\n        {{ company.name }}\r\n      </option>\r\n    </select>\r\n    <my-input v-model=\"visit.client_id\" type=\"text\" placeholder=\"Клиент\" />\r\n    <select v-model=\"visit.client_id\" @click=\"\">\r\n      <option disabled value=\"\">Выберите клиента</option>\r\n      <option\r\n        v-for=\"client in clientsByCompany\"\r\n        :key=\"client.id\"\r\n        :value=\"client.id\"\r\n      >\r\n        {{ client.name }}\r\n      </option>\r\n    </select>\r\n    <my-input v-model=\"visit.template_id\" type=\"text\" placeholder=\"Услуга\" />\r\n    <my-input\r\n      v-model=\"visit.visit_date\"\r\n      type=\"text\"\r\n      placeholder=\"Дата посещения\"\r\n    />\r\n    <my-input v-model=\"visit.description\" type=\"text\" placeholder=\"Описание\" />\r\n    <my-button\r\n      style=\"align-self: flex-end; margin-top: 15px\"\r\n      @click=\"createVisit\"\r\n    >\r\n      Создать\r\n    </my-button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport companyService from \"@/services/company.service\";\r\nimport MyButton from \"./UI/MyButton.vue\";\r\nimport MyInput from \"./UI/MyInput.vue\";\r\nimport UserService from \"@/services/user.service\";\r\n// import { parse } from \"../../node_modules/@formkit/tempo\";\r\n\r\nexport default {\r\n  components: {\r\n    MyButton,\r\n    MyInput,\r\n  },\r\n  data() {\r\n    return {\r\n      visit: {\r\n        company_id: \"\",\r\n        template_id: \"\",\r\n        client_id: \"\",\r\n        visit_date: \"\",\r\n        description: \"\",\r\n      },\r\n      companyByUser: [],\r\n      clientsByCompany: [],\r\n    };\r\n  },\r\n  methods: {\r\n    createVisit() {\r\n      this.$emit(\"create\", this.visit);\r\n      this.visit = {\r\n        company_id: \"\",\r\n        template_id: \"\",\r\n        client_id: \"\",\r\n        visit_date: \"\",\r\n        description: \"\",\r\n      };\r\n    },\r\n    companyService.getClientsByCompany(this.visit.company_id).then(\r\n      (response) => {\r\n        this.clientsByCompany = response.data;\r\n        console.log(this.clientsByCompany);\r\n      },\r\n      (error) => {\r\n        this.clientsByCompany =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n  },\r\n  mounted() {\r\n    UserService.getCompaniesByUser(this.currentUser.id).then(\r\n      (response) => {\r\n        this.companyByUser = response.data;\r\n        console.log(this.companyByUser);\r\n      },\r\n      (error) => {\r\n        this.companyByUser =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n    \r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAAwB,YAApB,iBAAe;gEAEjBA,mBAAA,CAAoD;EAA5CC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,mBAAiB;mBAJjD;gEAeMF,mBAAA,CAAmD;EAA3CC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,kBAAgB;mBAfhD;;;;uBACEC,mBAAA,CAoCO;IApCAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADfC,cAAA,CACQ,QAAe;MACnBC,UAAwB,E,gBACxBP,mBAAA,CASS;IAZb,uBAAAK,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAGqBC,IAAA,CAAAC,KAAK,CAACC,UAAU,GAAAH,MAAA;MAC/BI,UAAoD,G,kBACpDT,mBAAA,CAMSU,SAAA,QAXfC,WAAA,CAM0BL,IAAA,CAAAM,aAAa,EAAxBC,OAAO;yBADhBb,mBAAA,CAMS;MAJNc,GAAG,EAAED,OAAO,CAACE,EAAE;MACfhB,KAAK,EAAEc,OAAO,CAACE;wBAEbF,OAAO,CAACG,IAAI,wBAVvBC,UAAA;2EAGqBX,IAAA,CAAAC,KAAK,CAACC,UAAU,E,GAUjCU,YAAA,CAAuEC,mBAAA;IAb3EC,UAAA,EAauBd,IAAA,CAAAC,KAAK,CAACc,SAAS;IAbtC,uBAAAnB,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAauBC,IAAA,CAAAC,KAAK,CAACc,SAAS,GAAAhB,MAAA;IAAEiB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;2DAC5D1B,mBAAA,CASS;IAvBb,uBAAAK,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAcqBC,IAAA,CAAAC,KAAK,CAACc,SAAS,GAAAhB,MAAA;IAAGmB,OAAK,EAAAtB,MAAA,QAAAA,MAAA,MAAN,QAAS;MACzCuB,UAAmD,G,kBACnDzB,mBAAA,CAMSU,SAAA,QAtBfC,WAAA,CAiByBL,IAAA,CAAAoB,gBAAgB,EAA1BC,MAAM;yBADf3B,mBAAA,CAMS;MAJNc,GAAG,EAAEa,MAAM,CAACZ,EAAE;MACdhB,KAAK,EAAE4B,MAAM,CAACZ;wBAEZY,MAAM,CAACX,IAAI,wBArBtBY,UAAA;2EAcqBtB,IAAA,CAAAC,KAAK,CAACc,SAAS,E,GAUhCH,YAAA,CAAyEC,mBAAA;IAxB7EC,UAAA,EAwBuBd,IAAA,CAAAC,KAAK,CAACsB,WAAW;IAxBxC,uBAAA3B,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAwBuBC,IAAA,CAAAC,KAAK,CAACsB,WAAW,GAAAxB,MAAA;IAAEiB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;2CAC9DL,YAAA,CAIEC,mBAAA;IA7BNC,UAAA,EA0Bed,IAAA,CAAAC,KAAK,CAACuB,UAAU;IA1B/B,uBAAA5B,MAAA,QAAAA,MAAA,MAAAG,MAAA,IA0BeC,IAAA,CAAAC,KAAK,CAACuB,UAAU,GAAAzB,MAAA;IACzBiB,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;2CAEdL,YAAA,CAA2EC,mBAAA;IA9B/EC,UAAA,EA8BuBd,IAAA,CAAAC,KAAK,CAACwB,WAAW;IA9BxC,uBAAA7B,MAAA,QAAAA,MAAA,MAAAG,MAAA,IA8BuBC,IAAA,CAAAC,KAAK,CAACwB,WAAW,GAAA1B,MAAA;IAAEiB,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;2CAC9DL,YAAA,CAKYc,oBAAA;IAJVC,KAA8C,EAA9C;MAAA;MAAA;IAAA,CAA8C;IAC7CT,OAAK,EAAElB,IAAA,CAAA4B;;IAjCdC,OAAA,EAAAC,QAAA,CAkCK,MAED,CApCJC,gBAAA,CAkCK,WAED,E;IApCJC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}