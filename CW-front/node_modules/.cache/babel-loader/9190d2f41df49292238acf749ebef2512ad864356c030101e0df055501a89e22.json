{"ast":null,"code":"//служба аутентификации\n\n/*Служба предоставляет три важных метода с помощью axios для HTTP-запросов и ответов:\r\n\r\n    login(): POST {имя пользователя, пароль} и сохранить JWTв локальном хранилище.\r\n    logout(): удалить JWTиз локального хранилища\r\n    register(): POST {имя пользователя, адрес электронной почты, пароль}\r\n*/\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:3300/api/auth/';\nclass AuthService {\n  login(user) {\n    return axios.post(API_URL + 'signin', {\n      email: user.email,\n      password: user.password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem('user');\n  }\n  register(user) {\n    return axios.post(API_URL + 'signup', {\n      name: user.name,\n      email: user.email,\n      phone_number: user.phone_number,\n      password: user.password\n    });\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","user","post","email","password","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","name","phone_number"],"sources":["C:/Users/Admin/Desktop/X/SSTU/6 семак/БД/DBCourseWork/CW-front/src/services/auth.service.js"],"sourcesContent":["//служба аутентификации\r\n\r\n/*Служба предоставляет три важных метода с помощью axios для HTTP-запросов и ответов:\r\n\r\n    login(): POST {имя пользователя, пароль} и сохранить JWTв локальном хранилище.\r\n    logout(): удалить JWTиз локального хранилища\r\n    register(): POST {имя пользователя, адрес электронной почты, пароль}\r\n*/\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3300/api/auth/';\r\n\r\nclass AuthService {\r\n  login(user) {\r\n    return axios\r\n      .post(API_URL + 'signin', {\r\n        email: user.email,\r\n        password: user.password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem('user', JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  register(user) {\r\n    return axios.post(API_URL + 'signup', {\r\n      name: user.name,\r\n      email: user.email,\r\n      phone_number: user.phone_number,\r\n      password: user.password\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,IAAI,EAAE;IACV,OAAOJ,KAAK,CACTK,IAAI,CAACJ,OAAO,GAAG,QAAQ,EAAE;MACxBK,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,QAAQ,EAAEH,IAAI,CAACG;IACjB,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MAEA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAM,MAAMA,CAAA,EAAG;IACPJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQA,CAACd,IAAI,EAAE;IACb,OAAOJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,QAAQ,EAAE;MACpCkB,IAAI,EAAEf,IAAI,CAACe,IAAI;MACfb,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBc,YAAY,EAAEhB,IAAI,CAACgB,YAAY;MAC/Bb,QAAQ,EAAEH,IAAI,CAACG;IACjB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIL,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}