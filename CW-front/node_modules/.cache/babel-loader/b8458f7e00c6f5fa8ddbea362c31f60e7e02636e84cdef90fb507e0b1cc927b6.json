{"ast":null,"code":"import companyService from \"@/services/company.service\";\nimport MyButton from \"./UI/MyButton.vue\";\nimport MyInput from \"./UI/MyInput.vue\";\nimport UserService from \"@/services/user.service\";\nimport jobsServices from \"@/services/jobs.services\";\nimport categoryServices from \"@/services/category.services\";\n// import { parse } from \"../../node_modules/@formkit/tempo\";\n\nexport default {\n  components: {\n    MyButton,\n    MyInput\n  },\n  data() {\n    return {\n      visit: {\n        user_id: '',\n        company_id: \"\",\n        template_id: \"\",\n        client_id: \"\",\n        visit_date: \"\",\n        description: \"\"\n      },\n      job_id: \"\",\n      category_id: \"\",\n      companyByUser: [],\n      clientsByCompany: [],\n      jobsByUser: [],\n      categByUser: [],\n      templByCateg: []\n    };\n  },\n  methods: {\n    createVisit() {\n      this.$emit(\"create\", this.visit);\n      this.visit = {\n        company_id: \"\",\n        template_id: \"\",\n        client_id: \"\",\n        visit_date: \"\",\n        description: \"\"\n      };\n    },\n    currClient() {\n      companyService.getClientsByCompany(this.visit.company_id).then(response => {\n        this.clientsByCompany = response.data;\n      }, error => {\n        this.clientsByCompany = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    },\n    currCategory() {\n      jobsServices.getCategoriesByJob(this.job_id).then(response => {\n        this.categByUser = response.data;\n      }, error => {\n        this.categByUser = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    },\n    currTemplate() {\n      categoryServices.getTemplByCategory(this.category_id).then(response => {\n        this.templByCateg = response.data;\n      }, error => {\n        this.templByCateg = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    }\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    }\n  },\n  mounted() {\n    UserService.getCompaniesByUser(this.currentUser.id).then(response => {\n      this.companyByUser = response.data;\n      console.log(this.companyByUser);\n    }, error => {\n      this.companyByUser = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n    UserService.getJobsByUser(this.currentUser.id).then(response => {\n      this.jobsByUser = response.data;\n    }, error => {\n      this.jobsByUser = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  }\n};","map":{"version":3,"names":["companyService","MyButton","MyInput","UserService","jobsServices","categoryServices","components","data","visit","user_id","company_id","template_id","client_id","visit_date","description","job_id","category_id","companyByUser","clientsByCompany","jobsByUser","categByUser","templByCateg","methods","createVisit","$emit","currClient","getClientsByCompany","then","response","error","message","toString","currCategory","getCategoriesByJob","currTemplate","getTemplByCategory","computed","currentUser","$store","state","auth","user","mounted","getCompaniesByUser","id","console","log","getJobsByUser"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\VisitForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent>\r\n    <h4>Создание визита</h4>\r\n    <h5>{{ user }}</h5>\r\n    <select v-model=\"visit.company_id\">\r\n      <option disabled value=\"\">Выберите компанию</option>\r\n      <option\r\n        v-for=\"company in companyByUser\"\r\n        :key=\"company.id\"\r\n        :value=\"company.id\"\r\n      >\r\n        {{ company.name }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"visit.client_id\" @click=\"currClient\">\r\n      <option disabled value=\"\">Выберите клиента</option>\r\n      <option\r\n        v-for=\"client in clientsByCompany\"\r\n        :key=\"client.id\"\r\n        :value=\"client.id\"\r\n      >\r\n        {{ client.name }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"job_id\">\r\n      <option disabled value=\"\">Выберите должность</option>\r\n      <option v-for=\"job in jobsByUser\" :key=\"job.id\" :value=\"job.id\">\r\n        {{ job.name }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"category_id\" @click=\"currCategory\">\r\n      <option disabled value=\"\">Выберите категорию</option>\r\n      <option\r\n        v-for=\"category in categByUser\"\r\n        :key=\"category.id\"\r\n        :value=\"category.id\"\r\n      >\r\n        {{ category.name }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"visit.template_id\" @click=\"currTemplate\">\r\n      <option disabled value=\"\">Выберите услугу</option>\r\n      <option\r\n        v-for=\"template in templByCateg\"\r\n        :key=\"template.id\"\r\n        :value=\"template.id\"\r\n      >\r\n        {{ template.name }}\r\n      </option>\r\n    </select>\r\n    <my-input\r\n      v-model=\"visit.visit_date\"\r\n      type=\"text\"\r\n      placeholder=\"Дата посещения\"\r\n    />\r\n    <my-input v-model=\"visit.description\" type=\"text\" placeholder=\"Описание\" />\r\n    <my-button\r\n      style=\"align-self: flex-end; margin-top: 15px\"\r\n      @click=\"createVisit\"\r\n    >\r\n      Создать\r\n    </my-button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport companyService from \"@/services/company.service\";\r\nimport MyButton from \"./UI/MyButton.vue\";\r\nimport MyInput from \"./UI/MyInput.vue\";\r\nimport UserService from \"@/services/user.service\";\r\nimport jobsServices from \"@/services/jobs.services\";\r\nimport categoryServices from \"@/services/category.services\";\r\n// import { parse } from \"../../node_modules/@formkit/tempo\";\r\n\r\nexport default {\r\n  components: {\r\n    MyButton,\r\n    MyInput,\r\n  },\r\n  data() {\r\n    return {\r\n      visit: {\r\n        user_id: '',\r\n        company_id: \"\",\r\n        template_id: \"\",\r\n        client_id: \"\",\r\n        visit_date: \"\",\r\n        description: \"\",\r\n      },\r\n      job_id: \"\",\r\n      category_id: \"\",\r\n      companyByUser: [],\r\n      clientsByCompany: [],\r\n      jobsByUser: [],\r\n      categByUser: [],\r\n      templByCateg: [],\r\n    };\r\n  },\r\n  methods: {\r\n    createVisit() {\r\n      this.$emit(\"create\", this.visit);\r\n      this.visit = {\r\n        company_id: \"\",\r\n        template_id: \"\",\r\n        client_id: \"\",\r\n        visit_date: \"\",\r\n        description: \"\",\r\n      };\r\n    },\r\n    currClient() {\r\n      companyService.getClientsByCompany(this.visit.company_id).then(\r\n        (response) => {\r\n          this.clientsByCompany = response.data;\r\n        },\r\n        (error) => {\r\n          this.clientsByCompany =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        }\r\n      );\r\n    },\r\n    currCategory() {\r\n      jobsServices.getCategoriesByJob(this.job_id).then(\r\n        (response) => {\r\n          this.categByUser = response.data;\r\n        },\r\n        (error) => {\r\n          this.categByUser =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        }\r\n      );\r\n    },\r\n    currTemplate() {\r\n      categoryServices.getTemplByCategory(this.category_id).then(\r\n        (response) => {\r\n          this.templByCateg = response.data;\r\n        },\r\n        (error) => {\r\n          this.templByCateg =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        }\r\n      );\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n  },\r\n  mounted() {\r\n    UserService.getCompaniesByUser(this.currentUser.id).then(\r\n      (response) => {\r\n        this.companyByUser = response.data;\r\n        console.log(this.companyByUser);\r\n      },\r\n      (error) => {\r\n        this.companyByUser =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n    UserService.getJobsByUser(this.currentUser.id).then(\r\n      (response) => {\r\n        this.jobsByUser = response.data;\r\n      },\r\n      (error) => {\r\n        this.jobsByUser =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\nselect {\r\n  width: 100%;\r\n  border: 1px solid teal;\r\n  padding: 10px 15px;\r\n  margin-top: 15px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}