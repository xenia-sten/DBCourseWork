{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4a3fa6b9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"list row\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", null, \"Список участников:\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Добавление пользователя в компанию\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"list-group\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"list-group\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_my_input = _resolveComponent(\"my-input\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _createCommentVNode(\" <my-button id=\\\"btn-add-user\\\" @click=\\\"showDialog\\\"> Добавить участника </my-button>\\r\\n      <my-dialog :show=\\\"dialogVisible\\\">\\r\\n        <user-form @create=\\\"$emit('create', user)\\\"/>\\r\\n      </my-dialog> \"), _createVNode(_component_my_button, {\n    id: \"btn-add-user\",\n    onClick: _ctx.showAddUser\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Добавить участника \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _ctx.isVisibleAddUser ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_hoisted_3, _createVNode(_component_my_input, {\n    placeholder: \"Search by email\",\n    modelValue: _ctx.emailQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.emailQuery = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sortByEmailUsers, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"userItem list-group-item\",\n      key: user.id\n    }, [_createTextVNode(_toDisplayString(user.name) + \" - \" + _toDisplayString(user.email) + \" \", 1 /* TEXT */), user.id !== this.currentUser.id ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => _ctx.$emit('create', user),\n      class: \"badge badge-success\",\n      style: {\n        \"float\": \"right\"\n      }\n    }, \" Добавить \", 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 32 /* NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"userItem list-group-item\",\n      key: user.id\n    }, [_createTextVNode(_toDisplayString(user.name) + \" \", 1 /* TEXT */), user.id !== this.currentUser.id ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"badge badge-danger mr-2\",\n      onClick: $event => _ctx.$emit('remove', user)\n    }, \" Удалить \", 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_createVNode","_component_my_button","id","onClick","_ctx","showAddUser","default","_withCtx","_createTextVNode","_","isVisibleAddUser","key","onSubmit","_cache","_withModifiers","_hoisted_3","_component_my_input","placeholder","modelValue","emailQuery","$event","_hoisted_4","_Fragment","_renderList","sortByEmailUsers","user","_toDisplayString","name","email","currentUser","$emit","_hoisted_5","_hoisted_6","users","_hoisted_7"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list row\">\r\n    <div>\r\n      <h5>Список участников:</h5>\r\n      <!-- <my-button id=\"btn-add-user\" @click=\"showDialog\"> Добавить участника </my-button>\r\n      <my-dialog :show=\"dialogVisible\">\r\n        <user-form @create=\"$emit('create', user)\"/>\r\n      </my-dialog> -->\r\n      <my-button id=\"btn-add-user\" @click=\"showAddUser\">\r\n        Добавить участника\r\n      </my-button>\r\n      <form @submit.prevent v-if=\"isVisibleAddUser\">\r\n        <h4>Добавление пользователя в компанию</h4>\r\n        <my-input placeholder=\"Search by email\" v-model=\"emailQuery\" />\r\n        <ul class=\"list-group\" style=\"margin-top: 20px\">\r\n          <li\r\n            class=\"userItem list-group-item\"\r\n            v-for=\"user in sortByEmailUsers\"\r\n            :key=\"user.id\"\r\n          >\r\n            {{ user.name }} - {{ user.email }}\r\n            <button\r\n              @click=\"$emit('create', user)\"\r\n              class=\"badge badge-success\"\r\n              v-if=\"user.id !== this.currentUser.id\"\r\n              style=\"float: right\"\r\n            >\r\n              Добавить\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n      <ul class=\"list-group\">\r\n        <li\r\n          class=\"userItem list-group-item\"\r\n          v-for=\"user in users\"\r\n          :key=\"user.id\"\r\n        >\r\n          {{ user.name }}\r\n          <button\r\n            class=\"badge badge-danger mr-2\"\r\n            @click=\"$emit('remove', user)\"\r\n            v-if=\"user.id !== this.currentUser.id\"\r\n          >\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userService from \"@/services/user.service\";\r\nimport MyButton from \"./UI/MyButton.vue\";\r\n// import MyDialog from \"./UI/MyDialog.vue\";\r\n// import UserForm from './UserForm.vue';\r\nimport MyInput from \"./UI/MyInput.vue\";\r\n\r\nexport default {\r\n  // components: { MyButton, MyDialog, UserForm },\r\n  components: {MyInput, MyButton},\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // dialogVisible: false,\r\n      isVisibleAddUser: false,\r\n      usersWO: [],\r\n      emailQuery: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    sortByEmailUsers() {\r\n      return this.usersWO.filter((user) => user.email.includes(this.emailQuery));\r\n    },\r\n  },\r\n  methods: {\r\n    // showDialog() {\r\n    //   this.dialogVisible = true;\r\n    // },\r\n\r\n    showAddUser(){\r\n      if(this.isVisibleAddUser) this.isVisibleAddUser = false;\r\n      if(this.isVisibleAddUser = true;\r\n    },\r\n    // bindUserWithCompanyId(user){\r\n    //   this.$emit(\"create\", user);\r\n    //   this.dialogVisible = false;\r\n    // },\r\n  },\r\n  mounted() {\r\n    userService.getAllUsers().then(\r\n      (response) => {\r\n        this.usersWO = response.data;\r\n      }\r\n    ).catch(e => console.log(e));\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.userItem {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n  position: static;\r\n}\r\n#btn-add-user {\r\n  width: 200px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;gEAEjBC,mBAAA,CAA2B,YAAvB,oBAAkB;gEASpBA,mBAAA,CAA2C,YAAvC,oCAAkC;;EAElCD,KAAK,EAAC,YAAY;EAACE,KAAwB,EAAxB;IAAA;EAAA;;mBAd/B;;EAgCUF,KAAK,EAAC;AAAY;mBAhC5B;;;;uBACEG,mBAAA,CAgDM,OAhDNC,UAgDM,GA/CJH,mBAAA,CA8CM,cA7CJI,UAA2B,EAC3BC,mBAAA,wNAGgB,EAChBC,YAAA,CAEYC,oBAAA;IAFDC,EAAE,EAAC,cAAc;IAAEC,OAAK,EAAEC,IAAA,CAAAC;;IAR3CC,OAAA,EAAAC,QAAA,CAQwD,MAElD,CAVNC,gBAAA,CAQwD,sBAElD,E;IAVNC,CAAA;kCAWkCL,IAAA,CAAAM,gBAAgB,I,cAA5Cd,mBAAA,CAoBO;IA/Bbe,GAAA;IAWaC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAXnBC,cAAA,CAWY,QAAe;MACnBC,UAA2C,EAC3Cf,YAAA,CAA+DgB,mBAAA;IAArDC,WAAW,EAAC,iBAAiB;IAb/CC,UAAA,EAayDd,IAAA,CAAAe,UAAU;IAbnE,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAayDhB,IAAA,CAAAe,UAAU,GAAAC,MAAA;2CAC3D1B,mBAAA,CAgBK,MAhBL2B,UAgBK,I,kBAfHzB,mBAAA,CAcK0B,SAAA,QA7BfC,WAAA,CAiB2BnB,IAAA,CAAAoB,gBAAgB,EAAxBC,IAAI;yBAFb7B,mBAAA,CAcK;MAbHH,KAAK,EAAC,0BAA0B;MAE/BkB,GAAG,EAAEc,IAAI,CAACvB;QAlBvBM,gBAAA,CAAAkB,gBAAA,CAoBeD,IAAI,CAACE,IAAI,IAAG,KAAG,GAAAD,gBAAA,CAAGD,IAAI,CAACG,KAAK,IAAG,GAClC,iBAGQH,IAAI,CAACvB,EAAE,UAAU2B,WAAW,CAAC3B,EAAE,I,cAHvCN,mBAAA,CAOS;MA5BrBe,GAAA;MAsBeR,OAAK,EAAAiB,MAAA,IAAEhB,IAAA,CAAA0B,KAAK,WAAWL,IAAI;MAC5BhC,KAAK,EAAC,qBAAqB;MAE3BE,KAAoB,EAApB;QAAA;MAAA;OACD,YAED,iBA5BZoC,UAAA,KAAAhC,mBAAA,e;iEAAAA,mBAAA,gBAgCML,mBAAA,CAeK,MAfLsC,UAeK,I,kBAdHpC,mBAAA,CAaK0B,SAAA,QA9CbC,WAAA,CAmCyBnB,IAAA,CAAA6B,KAAK,EAAbR,IAAI;yBAFb7B,mBAAA,CAaK;MAZHH,KAAK,EAAC,0BAA0B;MAE/BkB,GAAG,EAAEc,IAAI,CAACvB;QApCrBM,gBAAA,CAAAkB,gBAAA,CAsCaD,IAAI,CAACE,IAAI,IAAG,GACf,iBAGQF,IAAI,CAACvB,EAAE,UAAU2B,WAAW,CAAC3B,EAAE,I,cAHvCN,mBAAA,CAMS;MA7CnBe,GAAA;MAwCYlB,KAAK,EAAC,yBAAyB;MAC9BU,OAAK,EAAAiB,MAAA,IAAEhB,IAAA,CAAA0B,KAAK,WAAWL,IAAI;OAE7B,WAED,iBA7CVS,UAAA,KAAAnC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}