{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Выберите из списка\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_mode = _resolveDirective(\"mode\");\n  return _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.changeOption && $options.changeOption(...args))\n  }, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, option => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: option.id,\n      value: option.id\n    }, _toDisplayString(option.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 32 /* NEED_HYDRATION */)), [[_directive_mode, $props.modelValue]]);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","onChange","_cache","args","$options","changeOption","_hoisted_1","_Fragment","_renderList","$props","options","option","key","id","name","_hoisted_2","modelValue"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\UI\\MySelect.vue"],"sourcesContent":["<!-- eslint-disable vue/no-mutating-props -->\r\n<template>\r\n  <select v-mode=\"modelValue\" @change=\"changeOption\">\r\n    <option disabled value=\"\">Выберите из списка</option>\r\n    <option\r\n      v-for=\"option in options\"\r\n      :key=\"option.id\"\r\n      :value=\"option.id\"\r\n    >\r\n      {{ option.name }}\r\n    </option>\r\n  </select>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'my-select',\r\n  props: {\r\n    modelValue: { //поле по кторому будет идти сортировка / выбранная компания\r\n      type: String\r\n    },\r\n    options: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  methods: {\r\n    changeOption(event) {\r\n      this.$emit('update:modelValue', event.target.value);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";gCAGIA,mBAAA,CAAqD;EAA7CC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,oBAAkB;mBAHhD;;;wCAEEC,mBAAA,CASS;IAToBC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAC/CG,UAAqD,G,kBACrDN,mBAAA,CAMSO,SAAA,QAVbC,WAAA,CAKuBC,MAAA,CAAAC,OAAO,EAAjBC,MAAM;yBADfX,mBAAA,CAMS;MAJNY,GAAG,EAAED,MAAM,CAACE,EAAE;MACdd,KAAK,EAAEY,MAAM,CAACE;wBAEZF,MAAM,CAACG,IAAI,wBATpBC,UAAA;iFAEkBN,MAAA,CAAAO,UAAU,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}