{"ast":null,"code":"import companyService from \"@/services/company.service\";\nimport MyButton from \"./UI/MyButton.vue\";\nimport MyInput from \"./UI/MyInput.vue\";\nimport UserService from \"@/services/user.service\";\n// import { parse } from \"../../node_modules/@formkit/tempo\";\n\nexport default {\n  components: {\n    MyButton,\n    MyInput\n  },\n  data() {\n    return {\n      visit: {\n        company_id: \"\",\n        template_id: \"\",\n        client_id: \"\",\n        visit_date: \"\",\n        description: \"\"\n      },\n      companyByUser: []\n    };\n  },\n  methods: {\n    createVisit() {\n      this.$emit(\"create\", this.visit);\n      this.visit = {\n        company_id: \"\",\n        template_id: \"\",\n        client_id: \"\",\n        visit_date: \"\",\n        description: \"\"\n      };\n    }\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    }\n  },\n  mounted() {\n    UserService.getCompaniesByUser(this.currentUser.id).then(response => {\n      this.companyByUser = response.data;\n      console.log(this.companyByUser);\n    }, error => {\n      this.companyByUser = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n    companyService.getClientsByCompany();\n  }\n};","map":{"version":3,"names":["companyService","MyButton","MyInput","UserService","components","data","visit","company_id","template_id","client_id","visit_date","description","companyByUser","methods","createVisit","$emit","computed","currentUser","$store","state","auth","user","mounted","getCompaniesByUser","id","then","response","console","log","error","message","toString","getClientsByCompany"],"sources":["C:\\Users\\Admin\\Desktop\\X\\SSTU\\6 семак\\БД\\DBCourseWork\\CW-front\\src\\components\\VisitForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent>\r\n    <h4>Создание визита</h4>\r\n    <select v-model=\"visit.company_id\">\r\n      <option disabled value=\"\">Выберите компанию</option>\r\n      <option\r\n        v-for=\"company in companyByUser\"\r\n        :key=\"company.id\"\r\n        :value=\"company.id\"\r\n      >\r\n        {{ company.name }}\r\n      </option>\r\n    </select>\r\n    <my-input v-model=\"visit.client_id\" type=\"text\" placeholder=\"Клиент\" />\r\n    <my-input v-model=\"visit.template_id\" type=\"text\" placeholder=\"Услуга\" />\r\n    <my-input\r\n      v-model=\"visit.visit_date\"\r\n      type=\"text\"\r\n      placeholder=\"Дата посещения\"\r\n    />\r\n    <my-input v-model=\"visit.description\" type=\"text\" placeholder=\"Описание\" />\r\n    <my-button\r\n      style=\"align-self: flex-end; margin-top: 15px\"\r\n      @click=\"createVisit\"\r\n    >\r\n      Создать\r\n    </my-button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport companyService from \"@/services/company.service\";\r\nimport MyButton from \"./UI/MyButton.vue\";\r\nimport MyInput from \"./UI/MyInput.vue\";\r\nimport UserService from \"@/services/user.service\";\r\n// import { parse } from \"../../node_modules/@formkit/tempo\";\r\n\r\nexport default {\r\n  components: {\r\n    MyButton,\r\n    MyInput,\r\n  },\r\n  data() {\r\n    return {\r\n      visit: {\r\n        company_id: \"\",\r\n        template_id: \"\",\r\n        client_id: \"\",\r\n        visit_date: \"\",\r\n        description: \"\",\r\n      },\r\n      companyByUser: [],\r\n    };\r\n  },\r\n  methods: {\r\n    createVisit() {\r\n      this.$emit(\"create\", this.visit);\r\n      this.visit = {\r\n        company_id: \"\",\r\n        template_id: \"\",\r\n        client_id: \"\",\r\n        visit_date: \"\",\r\n        description: \"\",\r\n      };\r\n    },\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n  },\r\n  mounted() {\r\n    UserService.getCompaniesByUser(this.currentUser.id).then(\r\n      (response) => {\r\n        this.companyByUser = response.data;\r\n        console.log(this.companyByUser);\r\n      },\r\n      (error) => {\r\n        this.companyByUser =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n    companyService.getClientsByCompany()\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n</style>"],"mappings":"AA+BA,OAAOA,cAAa,MAAO,4BAA4B;AACvD,OAAOC,QAAO,MAAO,mBAAmB;AACxC,OAAOC,OAAM,MAAO,kBAAkB;AACtC,OAAOC,WAAU,MAAO,yBAAyB;AACjD;;AAEA,eAAe;EACbC,UAAU,EAAE;IACVH,QAAQ;IACRC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,EAAE;QACbC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE;MACf,CAAC;MACDC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACT,KAAK,CAAC;MAChC,IAAI,CAACA,KAAI,GAAI;QACXC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,EAAE;QACbC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE;MACf,CAAC;IACH;EACF,CAAC;EACDK,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI;IACpC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRnB,WAAW,CAACoB,kBAAkB,CAAC,IAAI,CAACN,WAAW,CAACO,EAAE,CAAC,CAACC,IAAI,CACrDC,QAAQ,IAAK;MACZ,IAAI,CAACd,aAAY,GAAIc,QAAQ,CAACrB,IAAI;MAClCsB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,aAAa,CAAC;IACjC,CAAC,EACAiB,KAAK,IAAK;MACT,IAAI,CAACjB,aAAY,GACdiB,KAAK,CAACH,QAAO,IACZG,KAAK,CAACH,QAAQ,CAACrB,IAAG,IAClBwB,KAAK,CAACH,QAAQ,CAACrB,IAAI,CAACyB,OAAO,IAC7BD,KAAK,CAACC,OAAM,IACZD,KAAK,CAACE,QAAQ,CAAC,CAAC;IACpB,CACF,CAAC;IACD/B,cAAc,CAACgC,mBAAmB,CAAC;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}